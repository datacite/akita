---
language: node_js
node_js:
  - "12"

sudo: required

# if using Ubuntu 16 need this library
# https://github.com/cypress-io/cypress-documentation/pull/1647
addons:
  apt:
    packages:
    - libgconf-2-4

cache:
  yarn: true
  # cache both npm modules and Cypress binary
  directories:
    - ~/.npm
    - ~/.cache

before_install:
  - set -e
  - if [ "${TRAVIS_TAG?}" ]; then
      AUTO_DEPLOY=true;
      DEPLOY_TARGET="production";
    elif [ "$TRAVIS_BRANCH" == "master" ]; then
      AUTO_DEPLOY=true;
      DEPLOY_TARGET="staging";
    else
      AUTO_DEPLOY=false;
      DEPLOY_TARGET="staging";
    fi
  - npm config set spin false
  - curl -o- -L https://yarnpkg.com/install.sh | bash
  - export PATH=$HOME/.yarn/bin:$PATH

install:
  - yarn install --non-interactive --frozen-lockfile
  - npm install cypress --save-dev
  - sudo pip install awscli

before_script:
  - curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
  - chmod +x ./cc-test-reporter
  - ./cc-test-reporter before-build

script:
  - yarn lint
  - yarn ci
  - yarn cy:coverage
  - ./cc-test-reporter after-build --exit-code $TRAVIS_TEST_RESULT

after_success:
  - docker login -u "$DOCKER_USERNAME" -p "$DOCKER_PASSWORD";
  - REPO=datacite/akita;
  - if [ "${TRAVIS_TAG?}" ]; then
      docker build -f Dockerfile -t $REPO:$TRAVIS_TAG .;
      docker push $REPO:$TRAVIS_TAG;
      echo "Pushed to" $REPO:$TRAVIS_TAG;
    elif [[ "$TRAVIS_BRANCH" == "master" && "$TRAVIS_PULL_REQUEST" == "false" ]]; then
      docker build -f Dockerfile -t $REPO .;
      docker push $REPO;
      echo "Pushed to" $REPO;
    else
      docker build -f Dockerfile -t $REPO:$TRAVIS_BRANCH .;
      docker push $REPO:$TRAVIS_BRANCH;
      echo "Pushed to" $REPO:$TRAVIS_BRANCH;
    fi

  - if [ "$AUTO_DEPLOY" == "true" ]; then
      wget https://github.com/jwilder/dockerize/releases/download/v0.6.0/dockerize-linux-amd64-v0.6.0.tar.gz;
      tar -xzvf dockerize-linux-amd64-v0.6.0.tar.gz;
      rm dockerize-linux-amd64-v0.6.0.tar.gz;
      export GIT_SHA=$(git rev-parse --short HEAD);
      export GIT_REVISION=$(git rev-parse HEAD);
      export GIT_TAG=$(git describe --tags $(git rev-list --tags --max-count=1));

      git clone "https://${TRAVIS_SECURE_TOKEN}@github.com/datacite/mastino.git";
      ./dockerize -template vendor/docker/_akita.auto.tfvars.tmpl:mastino/stage/services/akita/_akita.auto.tfvars;

      if [ "${TRAVIS_TAG?}" ]; then
        ./dockerize -template vendor/docker/_akita.auto.tfvars.tmpl:mastino/prod-eu-west/services/akita/_akita.auto.tfvars;
      fi

      cd mastino;
      git remote;
      git config user.email ${DOCKER_EMAIL};
      git config user.name ${DOCKER_USERNAME};

      if [ "${TRAVIS_TAG?}" ]; then
        git add prod-eu-west/services/akita/_akita.auto.tfvars;
        git commit -m "Adding akita git variables for commit tagged ${TRAVIS_TAG?}";
        git push "https://${TRAVIS_SECURE_TOKEN}@github.com/datacite/mastino.git" master;
      else
        git add stage/services/akita/_akita.auto.tfvars;
        git commit -m "Adding akita git variables for latest commit";
        git push "https://${TRAVIS_SECURE_TOKEN}@github.com/datacite/mastino.git" master;
      fi
    fi

notifications:
  slack: datacite:Wt8En0ALoTA6Kjc5EOKNDWxN
  email: false
